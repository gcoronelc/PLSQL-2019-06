--GENERAR RETIRO

CREATE OR REPLACE PROCEDURE SP_GENERAR_RETIRO(P_CUENTA_NUM T_CUENTA.CUENTA_NUM%TYPE,P_MONTO T_OPERACION.MONTO%TYPE)
IS
V_CUENTA_ID T_CUENTA.CUENTA_ID%TYPE;
V_SALDO T_CUENTA.SALDO%TYPE;
VALOR_NEGATIVO EXCEPTION;
--V_CLIENTE_COD T_CLIENTE.CLIENTE_COD%TYPE;
BEGIN
  SELECT SALDO INTO V_SALDO FROM T_CUENTA WHERE CUENTA_NUM = P_CUENTA_NUM;
  --VALIDACION
  IF V_SALDO < P_MONTO THEN
      dbms_output.put_line('SALDO INSUFICIENTE');
  END IF;
  IF P_MONTO < 0 THEN
      RAISE VALOR_NEGATIVO;
  ELSE
  
  SELECT CUENTA_ID INTO V_CUENTA_ID FROM T_CUENTA WHERE CUENTA_NUM = P_CUENTA_NUM;
  INSERT INTO T_OPERACION
  VALUES(21,V_CUENTA_ID,SYSDATE,P_MONTO,2,1);
  
  UPDATE T_CUENTA
  SET SALDO = SALDO - P_MONTO
  WHERE CUENTA_NUM = P_CUENTA_NUM;
 
  dbms_output.put_line('MONTO RETIRADO CORRECTAMENTE');

  END IF;
  EXCEPTION
    WHEN VALOR_NEGATIVO THEN
    dbms_output.put_line('EL MONTO NO PUEDE SER NEGATIVO');
  
END;

CALL SP_GENERAR_RETIRO('222333444555', -600);





--GENERAR DEPOSITO

CREATE OR REPLACE PROCEDURE SP_GENERAR_DEPOSITO(P_CUENTA_NUM T_CUENTA.CUENTA_NUM%TYPE,P_MONTO T_OPERACION.MONTO%TYPE)
IS
V_CUENTA_ID T_CUENTA.CUENTA_ID%TYPE;
V_SALDO T_CUENTA.SALDO%TYPE;
VALOR_NEGATIVO EXCEPTION;
--V_CLIENTE_COD T_CLIENTE.CLIENTE_COD%TYPE;
BEGIN
  SELECT SALDO INTO V_SALDO FROM T_CUENTA WHERE CUENTA_NUM = P_CUENTA_NUM;
 
  IF P_MONTO < 0 THEN
      RAISE VALOR_NEGATIVO;
  ELSE
  
  SELECT CUENTA_ID INTO V_CUENTA_ID FROM T_CUENTA WHERE CUENTA_NUM = P_CUENTA_NUM;
  INSERT INTO T_OPERACION
  VALUES(31,V_CUENTA_ID,SYSDATE,P_MONTO,1,1);
  
  UPDATE T_CUENTA
  SET SALDO = SALDO + P_MONTO
  WHERE CUENTA_NUM = P_CUENTA_NUM;
 
  dbms_output.put_line('MONTO DEPOSITADO CORRECTAMENTE');
  
  END IF;
  EXCEPTION
    WHEN VALOR_NEGATIVO THEN
    dbms_output.put_line('EL MONTO NO PUEDE SER NEGATIVO');
  
END;

CALL SP_GENERAR_DEPOSITO('222333444555', 2000);

SELECT * FROM T_CUENTA
SELECT * FROM T_OPERACION


--GENERAR TRANSFERENCIA

CREATE OR REPLACE PROCEDURE SP_GENERAR_TRANSFERENCIA(P_CUENTA_NUM_ORIG T_CUENTA.CUENTA_NUM%TYPE,
P_CUENTA_NUM_DEST T_CUENTA.CUENTA_NUM%TYPE,
P_MONTO T_OPERACION.MONTO%TYPE)
IS
V_CUENTA_ID T_CUENTA.CUENTA_ID%TYPE;
--V_CUENTA_ID_DEST T_CUENTA.CUENTA_ID%TYPE;
V_SALDO T_CUENTA.SALDO%TYPE;
VALOR_NEGATIVO EXCEPTION;

BEGIN
  SELECT SALDO INTO V_SALDO FROM T_CUENTA WHERE CUENTA_NUM = P_CUENTA_NUM_ORIG;
  
 --VALIDACION
  IF V_SALDO < P_MONTO THEN
      dbms_output.put_line('SALDO INSUFICIENTE');
  END IF;
  
  IF P_MONTO < 0 THEN
      RAISE VALOR_NEGATIVO;
  ELSE
  
  SELECT CUENTA_ID INTO V_CUENTA_ID FROM T_CUENTA WHERE CUENTA_NUM = P_CUENTA_NUM_ORIG;
  INSERT INTO T_OPERACION
  VALUES(100,V_CUENTA_ID,SYSDATE,P_MONTO,3,1);
  
  --CUENTA ORIGEN
  UPDATE T_CUENTA
  SET SALDO = SALDO - P_MONTO
  WHERE CUENTA_NUM = P_CUENTA_NUM_ORIG;
  
  --CUENTA DESTINO
  UPDATE T_CUENTA
  SET SALDO = SALDO + P_MONTO
  WHERE CUENTA_NUM = P_CUENTA_NUM_DEST;
 
  dbms_output.put_line('LA TRANSFERENCIA SE REALIZO CORRECTAMENTE');
  
  END IF;
  EXCEPTION
    WHEN VALOR_NEGATIVO THEN
    dbms_output.put_line('EL MONTO NO PUEDE SER NEGATIVO');
  
END;

CALL SP_GENERAR_TRANSFERENCIA('222333444555', '222333444666', 1000);

SELECT * FROM T_CUENTA
SELECT * FROM T_OPERACION